--- Push data to a Google sheet
-- @author Darrell
--
-- Google Sheets provides an API to edit/update sheets, however it requires
-- authentication even if the sheet is public.  Rather than going through the
-- authentication process, instead talk to a proxy Google Apps Script which
-- interacts with sheets.
--
-- Here are some links I found useful while researching this:
-- @see https://developers.google.com/sheets/api/guides/concepts
-- @see https://developers.google.com/sheets/api/guides/values
-- @see http://embedded-lab.com/blog/post-data-google-sheets-using-esp8266/
--
-- HOW TO USE:
--
-- Open the Google Sheet you want this script to update.  Click "File", "Share",
-- and set Get Link to "Editor" (anyone on the internet with this link can edit).
-- Yes, that's scary.  Be careful not to expose the URL!
--
-- (Editor permission is necesary as proxy edits as a generic Google user, not you).
--
-- When calling the proxy the post body should be a JSON-encoded table with:
-- {
--   id = string sheet id.
--   sheet = optional string sheet name, defaults to "Sheet1".
--   cells = table from cell to new value.
-- }
--
-- Example:
-- local body = JSON.encode({
--     id = '<google sheet id>',
--     cells = {
--         a1 = 'hello',
--         a2 = 'world'
--     }
-- })

local GAS_PROXY = 'https://script.google.com/macros/s/AKfycbzx5wxUv3BG6EiYfIv0mC9YNnEJKMkSNh0uYSOMJlGOjCJ8Ak2s/exec'

function sheetLinkToSheetId(url)
    local id = string.match(url, 'http[s]://docs.google.com/spreadsheets/.*/(.*)/edit')
    if not id then
        error('unable to extract id from sheet url')
    end
    return id
end

function getCallback(webRequest)
    print('getCallback: ' .. webRequest.text)
end

function putCallback(webRequest)
    if webRequest.text == 'ok' then
        print('putCallback: success!')
    else
        print('putCallback: error = "' .. (webRequest.error or 'nil') .. '"')
    end
end

function onLoad(save_state)
    print('onLoad ' .. self.getName() .. ' ' .. Time.time)

    self.createInput({
        input_function = "doNothing",
        function_owner = self,
        position  = {x=0, y=0.25, z=-0.5},
        width = 1000,
        height = 180,
        font_size = 50,
        alignment = 2,
        value = "",
        label = "Enter the Google Sheet EDITOR ENABLED shared link."
    })
    self.createInput({
        input_function = "doNothing",
        function_owner = self,
        position = {x=0, y=0.25, z=0},
        width = 1000,
        height = 180,
        font_size = 50,
        alignment = 2,
        value = "",
        label = "Update A1 with this value."
    })
    self.createButton({
        click_function = "updateGoogleSheet",
        function_owner = self,
        label = "Update Sheet",
        position = {x=0, y=0.5, z=0.5},
        width = 500,
        height = 200,
        font_size = 70,
    })
end

function doNothing()
end

function updateGoogleSheet()
    local function getInputValue(labelPrefix)
        for _, input in ipairs(self.getInputs()) do
            if string.match(input.label, labelPrefix) then
                return input.value
            end
        end
        error('missing input')
    end
    local sheetUrl = getInputValue('^Enter the Google Sheet')
    local value = getInputValue('^Update A1')

    local id = sheetLinkToSheetId(sheetUrl)
    local postData = {
        id = id,
        cells = {
            a1 = value,
            a2 = 'also setting a2 to show multiple sets in one call'
        }
    }

    WebRequest.post(GAS_PROXY, JSON.encode(postData), putCallback)

    -- Also go a GET to read the content of a single cell (useful to verify
    -- correct sheet).
    local url = GAS_PROXY
    url = url .. '?id=' .. id
    url = url .. '&cell=' .. 'a3'
    WebRequest.get(url, getCallback)
end
